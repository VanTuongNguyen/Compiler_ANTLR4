
        function can_swap(a, b: integer): boolean;
        var
        c: integer;
        begin
        if a<=b then exit(false);
        c:=a; a:=b; b:=c;
        exit(true);
        end

        procedure combsort(a: integer; n: integer);
        var
        i, g: integer;
        swapped: boolean;
        begin
        g := n;
        while (g=1) and (not swapped) do
        begin
            g := max(g * 10 div 13, 1);
            swapped := false;
            for i := 1 to n-g do
            if can_swap(a[i], a[i+g]) then
            swapped := true;
        end 
        end 
        